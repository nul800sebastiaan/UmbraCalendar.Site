<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <TargetFramework>net9.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Cultiv.Hangfire" Version="4.1.3" />
    <PackageReference Include="LiteDB" Version="5.0.21" />
    <PackageReference Include="System.ServiceModel.Syndication" Version="9.0.7" />
    <PackageReference Include="Umbraco.AuthorizedServices" Version="16.0.0" />
    <PackageReference Include="Umbraco.Cms" Version="16.0.0" />
    <PackageReference Include="uSync" Version="16.0.1" />
  </ItemGroup>

  <ItemGroup>
    <!-- Opt-in to app-local ICU to ensure consistent globalization APIs across different platforms -->
    <PackageReference Include="Microsoft.ICU.ICU4C.Runtime" Version="72.1.0.3" />
    <RuntimeHostConfigurationOption Include="System.Globalization.AppLocalIcu" Value="72.1.0.3" Condition="$(RuntimeIdentifier.StartsWith('linux')) or $(RuntimeIdentifier.StartsWith('win')) or ('$(RuntimeIdentifier)' == '' and !$([MSBuild]::IsOSPlatform('osx')))" />
  </ItemGroup>

  <PropertyGroup>
    <!-- Razor files are needed for the backoffice to work correctly -->
    <CopyRazorGenerateFilesToPublishDirectory>true</CopyRazorGenerateFilesToPublishDirectory>
  </PropertyGroup>

  <PropertyGroup>
    <!-- Remove RazorCompileOnBuild and RazorCompileOnPublish when not using ModelsMode InMemoryAuto -->
    <RazorCompileOnBuild>false</RazorCompileOnBuild>
    <RazorCompileOnPublish>false</RazorCompileOnPublish>
  </PropertyGroup>
  
  <Target Name="GenerateSwagger" AfterTargets="Publish">
    <!-- Define paths -->
    <PropertyGroup>
      <SwaggerOutputFile>$(PublishDir)wwwroot\swagger\delivery-swagger.json</SwaggerOutputFile>
    </PropertyGroup>

    <!-- Make sure the output directory exists -->
    <MakeDir Directories="$(PublishDir)wwwroot\swagger" />

    <!-- Run Swashbuckle CLI to generate swagger.json -->
    <Exec Command="dotnet tool restore" />
    <Exec Command="dotnet swagger tofile --output &quot;$(SwaggerOutputFile)&quot; &quot;$(TargetDir)$(ProjectName).dll&quot; delivery" />

  </Target>
</Project>
